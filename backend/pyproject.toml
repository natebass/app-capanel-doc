[project]
name = 'app'
version = '0.1.0'
description = 'FastAPI application for the California Accountability Panel website.'
requires-python = '>=3.10,<4.0'
dependencies = [
    'fastapi[standard]',
    'python-multipart',
    'email-validator',
    'passlib[bcrypt]',
    'tenacity',
    'pydantic',
    'emails',
    'jinja2',
    'alembic',
    'httpx',
    'psycopg[binary]',
    'sqlmodel',
    'bcrypt',
    'pydantic-settings',
    'sentry-sdk[fastapi]',
    'pyjwt',
    'pre-commit',
    'pytest',
]

[dependency-groups]
dev = [
    'pytest',
    'mypy',
    'ruff',
    'pre-commit',
    'types-passlib',
    'coverage',
]

doc = [
    'sphinx',
    'sphinx-autodoc-typehints',
    'sphinx-autobuild',
    'pydata-sphinx-theme',
    'docutils-stubs',
    'types-docutils',
]

[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'

[tool.mypy]
strict = true
exclude = ['venv', '.venv', 'alembic']

[tool.ruff]
target-version = 'py310'
exclude = ['alembic']

[tool.ruff.lint]
select = [
    'E', # pycodestyle errors
    'W', # pycodestyle warnings
    'F', # pyflakes
    'I', # isort
    'B', # flake8-bugbear
    'C4', # flake8-comprehensions
    'UP', # pyupgrade
    'ARG001', # unused arguments in functions
]
ignore = [
    'E501', # line too long, handled by black
    'B008', # do not perform function calls in argument defaults
    'W191', # indentation contains tabs
    'B904', # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.format]
quote-style = 'single'

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.coverage.run]
source = ['app']
dynamic_context = 'test_function'

[tool.coverage.report]
show_missing = true
sort = '-Cover'

[tool.coverage.html]
show_contexts = true
